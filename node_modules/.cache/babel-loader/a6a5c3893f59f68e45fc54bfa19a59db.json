{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leena\\\\Downloads\\\\Narudoro.1\\\\src\\\\components\\\\App.jsx\";\nimport React, { useState } from \"react\";\nimport { useTimer } from \"react-timer-hook\"; //mock data\n\nimport data from \"../data.json\"; //components\n\nimport Header from \"./ToDo/Header\"; // import ToDoList from \"./ToDo/ToDoList\";\n// import ToDoForm from \"./ToDo/ToDoForm\";\n// import MyTimer from \"./Timer\";\n// import Note from \"./TimeCard\";\n\nimport Footer from \"./Footer\";\n\nfunction MyTimer(_ref) {\n  var expiryTimestamp = _ref.expiryTimestamp;\n\n  var _useTimer = useTimer({\n    expiryTimestamp: expiryTimestamp,\n    onExpire: function onExpire() {\n      return console.warn(\"onExpire called\");\n    }\n  }),\n      seconds = _useTimer.seconds,\n      minutes = _useTimer.minutes,\n      isRunning = _useTimer.isRunning,\n      start = _useTimer.start,\n      pause = _useTimer.pause,\n      resume = _useTimer.resume,\n      restart = _useTimer.restart;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Work Time \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"no breaks\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"100px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, minutes), \":\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 32\n    }\n  }, seconds)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: start,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: pause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Pause\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resume,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Resume\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      // Restarts to 5 minutes timer\n      var time = new Date();\n      time.setSeconds(time.getSeconds() + 300);\n      restart(time);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Restart\"));\n}\n\nfunction App() {\n  // const [toDoList, setToDoList] = useState(data);\n  // const handleToggle = (id) => {\n  //   let mapped = toDoList.map((task) => {\n  //     return task.id === Number(id)\n  //       ? { ...task, complete: !task.complete }\n  //       : { ...task };\n  //   });\n  //   setToDoList(mapped);\n  // };\n  // const handleFilter = () => {\n  //   let filtered = toDoList.filter((task) => {\n  //     return !task.complete;\n  //   });\n  //   setToDoList(filtered);\n  // };\n  // const addTask = (userInput) => {\n  //   let copy = [...toDoList];\n  //   copy = [\n  //     ...copy,\n  //     { id: toDoList.length + 1, task: userInput, complete: false }\n  //   ];\n  //   setToDoList(copy);\n  // };\n  var time = new Date();\n  time.setSeconds(time.getSeconds() + 600); // 10 minutes timer\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MyTimer, {\n    expiryTimestamp: time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ToDoList, {\n    toDoList: toDoList,\n    handleToggle: handleToggle,\n    handleFilter: handleFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ToDoForm, {\n    addTask: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","useTimer","data","Header","Footer","MyTimer","expiryTimestamp","onExpire","console","warn","seconds","minutes","isRunning","start","pause","resume","restart","textAlign","fontSize","time","Date","setSeconds","getSeconds","App","toDoList","handleToggle","handleFilter","addTask"],"sources":["C:/Users/leena/Downloads/Narudoro.1/src/components/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useTimer } from \"react-timer-hook\";\n//mock data\nimport data from \"../data.json\";\n//components\nimport Header from \"./ToDo/Header\";\n// import ToDoList from \"./ToDo/ToDoList\";\n// import ToDoForm from \"./ToDo/ToDoForm\";\n// import MyTimer from \"./Timer\";\n// import Note from \"./TimeCard\";\nimport Footer from \"./Footer\";\n\nfunction MyTimer({ expiryTimestamp }) {\n  const {\n    seconds,\n    minutes,\n    isRunning,\n    start,\n    pause,\n    resume,\n    restart\n  } = useTimer({\n    expiryTimestamp,\n    onExpire: () => console.warn(\"onExpire called\")\n  });\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h1>Work Time </h1>\n      <p>no breaks</p>\n      <div style={{ fontSize: \"100px\" }}>\n        <span>{minutes}</span>:<span>{seconds}</span>\n      </div>\n      {/* <p>{isRunning ? \"Running\" : \"Not running\"}</p> */}\n      <button onClick={start}>Start</button>\n      <button onClick={pause}>Pause</button>\n      <button onClick={resume}>Resume</button>\n      <button\n        onClick={() => {\n          // Restarts to 5 minutes timer\n          const time = new Date();\n          time.setSeconds(time.getSeconds() + 300);\n          restart(time);\n        }}\n      >\n        Restart\n      </button>\n    </div>\n  );\n}\n\nfunction App() {\n  // const [toDoList, setToDoList] = useState(data);\n\n  // const handleToggle = (id) => {\n  //   let mapped = toDoList.map((task) => {\n  //     return task.id === Number(id)\n  //       ? { ...task, complete: !task.complete }\n  //       : { ...task };\n  //   });\n  //   setToDoList(mapped);\n  // };\n\n  // const handleFilter = () => {\n  //   let filtered = toDoList.filter((task) => {\n  //     return !task.complete;\n  //   });\n  //   setToDoList(filtered);\n  // };\n\n  // const addTask = (userInput) => {\n  //   let copy = [...toDoList];\n  //   copy = [\n  //     ...copy,\n  //     { id: toDoList.length + 1, task: userInput, complete: false }\n  //   ];\n  //   setToDoList(copy);\n  // };\n\n  const time = new Date();\n  time.setSeconds(time.getSeconds() + 600); // 10 minutes timer\n  return (\n    <div>\n      <Header />\n      <MyTimer expiryTimestamp={time} />\n      <ToDoList\n        toDoList={toDoList}\n        handleToggle={handleToggle}\n        handleFilter={handleFilter}\n      />\n      <ToDoForm addTask={addTask} />\n      \n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}