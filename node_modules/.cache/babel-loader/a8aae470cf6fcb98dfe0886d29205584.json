{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\leena\\\\Downloads\\\\Narudoro.1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\leena\\\\Downloads\\\\Narudoro.1\\\\src\\\\components\\\\Timer\\\\CountDown.jsx\";\n\nimport React, { useState, useEffect, useRef } from 'react';\n\nvar CountDown = function CountDown() {\n  var _useState = useState(1500),\n      _useState2 = _slicedToArray(_useState, 2),\n      sessionLength = _useState2[0],\n      setSessionLength = _useState2[1];\n\n  var _useState3 = useState(300),\n      _useState4 = _slicedToArray(_useState3, 2),\n      breakLength = _useState4[0],\n      setBreakLength = _useState4[1];\n\n  var _useState5 = useState(1500),\n      _useState6 = _slicedToArray(_useState5, 2),\n      timer = _useState6[0],\n      setTimer = _useState6[1];\n\n  var _useState7 = useState('00'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      timerMinutes = _useState8[0],\n      setTimerMinutes = _useState8[1];\n\n  var _useState9 = useState('00'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      timerSeconds = _useState10[0],\n      setTimerSeconds = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      timerIntervalId = _useState12[0],\n      setTimerIntervalId = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isSession = _useState14[0],\n      setIsSession = _useState14[1];\n\n  var _useState15 = useState('Session'),\n      _useState16 = _slicedToArray(_useState15, 2),\n      sessionType = _useState16[0],\n      setSessionType = _useState16[1];\n\n  var audioRef = useRef();\n  var hasStarted = timerIntervalId !== null; // check timer state\n  // // update timer display\n\n  useEffect(function () {\n    if (timer === 0) {\n      audioRef.current.play();\n\n      if (sessionType === 'Session') {\n        setSessionType('Break');\n        setTimer(breakLength);\n      } else {\n        setSessionType('Session');\n        setTimer(sessionLength);\n      }\n    }\n  }, [timer, sessionType]);\n  useEffect(function () {\n    setTimer(sessionLength);\n  }, [sessionLength]);\n  useEffect(function () {\n    var time = secondsToTime(timer);\n    setTimerMinutes(time[0]);\n    setTimerSeconds(time[1]);\n  }, [timer]);\n\n  function toggleCountDown() {\n    if (hasStarted) {\n      // started mode\n      if (timerIntervalId) {\n        clearInterval(timerIntervalId);\n      }\n\n      setTimerIntervalId(null);\n    } else {\n      // stopped mode\n      // create accurate date timer with date\n      var newIntervalId = setInterval(function () {\n        setTimer(function (prevTime) {\n          var newTime = prevTime - 1;\n          var time = secondsToTime(newTime);\n          setTimerMinutes(time[0]);\n          setTimerSeconds(time[1]);\n          return newTime;\n        });\n      }, 1000);\n      setTimerIntervalId(newIntervalId);\n    }\n  } // return minutes and seconds of seconds\n\n\n  function secondsToTime(seconds) {\n    return [Math.floor(seconds / 60), seconds % 60];\n  } // zero paddings if < 10\n\n\n  function formatDisplayTime(time) {\n    if (time < 10) {\n      return \"0\".concat(time);\n    } else {\n      return time;\n    }\n  }\n\n  function handleBreakLengthChange(e) {\n    if (hasStarted) return; // guard against change when running\n\n    if (e.target.id === 'break-decrement' && breakLength > 60) {\n      setBreakLength(function (prevVal) {\n        return prevVal - 60;\n      });\n    } else if (e.target.id === 'break-increment' && breakLength < 3600) {\n      setBreakLength(function (prevVal) {\n        return prevVal + 60;\n      });\n    }\n  }\n\n  function handleSessionLengthChange(e) {\n    if (hasStarted) return; // guard against change when running\n\n    if (e.target.id === 'session-decrement' && sessionLength > 60) {\n      setSessionLength(function (prevVal) {\n        return prevVal - 60;\n      });\n    } else if (e.target.id === 'session-increment' && sessionLength < 3600) {\n      setSessionLength(function (prevVal) {\n        return prevVal + 60;\n      });\n    }\n  }\n\n  function handleResetTimer() {\n    var _audioRef$current;\n\n    audioRef === null || audioRef === void 0 ? void 0 : (_audioRef$current = audioRef.current) === null || _audioRef$current === void 0 ? void 0 : _audioRef$current.load();\n\n    if (timerIntervalId) {\n      clearInterval(timerIntervalId);\n    }\n\n    setTimerIntervalId(null);\n    setSessionLength(1500);\n    setBreakLength(300);\n    setSessionType('Session');\n    setTimer(1500);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clock-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clock\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"Pomodoro Timer\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"length-controls\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"length-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"break-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, \"Break Length\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"length-control-btns\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"break-decrement\",\n    onClick: function onClick(e) {\n      return handleBreakLengthChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, \"<\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"break-length\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, Math.floor(breakLength / 60)), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"break-increment\",\n    onClick: function onClick(e) {\n      return handleBreakLengthChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \">\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"length-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"session-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, \"Session Length\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"length-control-btns\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"session-decrement\",\n    onClick: function onClick(e) {\n      return handleSessionLengthChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, \"<\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"session-length\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, sessionLength / 60), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"session-increment\",\n    onClick: function onClick(e) {\n      return handleSessionLengthChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, \">\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"timer-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, sessionType), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"time-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, formatDisplayTime(timerMinutes), \":\", formatDisplayTime(timerSeconds))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"start_stop\",\n    onClick: function onClick(e) {\n      return toggleCountDown();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, hasStarted ? 'Stop' : 'Start'), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"reset\",\n    onClick: handleResetTimer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, \"Reset\")))), /*#__PURE__*/React.createElement(\"audio\", {\n    id: \"beep\",\n    preload: \"auto\",\n    ref: audioRef,\n    src: \"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CountDown;","map":{"version":3,"names":["React","useState","useEffect","useRef","CountDown","sessionLength","setSessionLength","breakLength","setBreakLength","timer","setTimer","timerMinutes","setTimerMinutes","timerSeconds","setTimerSeconds","timerIntervalId","setTimerIntervalId","isSession","setIsSession","sessionType","setSessionType","audioRef","hasStarted","current","play","time","secondsToTime","toggleCountDown","clearInterval","newIntervalId","setInterval","prevTime","newTime","seconds","Math","floor","formatDisplayTime","handleBreakLengthChange","e","target","id","prevVal","handleSessionLengthChange","handleResetTimer","load"],"sources":["C:/Users/leena/Downloads/Narudoro.1/src/components/Timer/CountDown.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst CountDown = () => {\r\n  const [sessionLength, setSessionLength] = useState(1500)\r\n  const [breakLength, setBreakLength] = useState(300)\r\n\r\n  const [timer, setTimer] = useState(1500)\r\n  const [timerMinutes, setTimerMinutes] = useState('00')\r\n  const [timerSeconds, setTimerSeconds] = useState('00')\r\n  const [timerIntervalId, setTimerIntervalId] = useState(null)\r\n  const [isSession, setIsSession] = useState(false)\r\n  const [sessionType, setSessionType] = useState('Session')\r\n\r\n  const audioRef = useRef()\r\n  let hasStarted = timerIntervalId !== null // check timer state\r\n\r\n\r\n  // // update timer display\r\n  useEffect(() => {\r\n    if (timer === 0) {\r\n      audioRef.current.play()\r\n      if (sessionType === 'Session') {\r\n        setSessionType('Break')\r\n        setTimer(breakLength)\r\n      } else {\r\n        setSessionType('Session')\r\n        setTimer(sessionLength)\r\n      }\r\n    }\r\n  }, [timer, sessionType])\r\n\r\n\r\n  useEffect(() => {\r\n    setTimer(sessionLength)\r\n  }, [sessionLength])\r\n\r\n  useEffect(() => {\r\n    let time = secondsToTime(timer)\r\n    setTimerMinutes(time[0])\r\n    setTimerSeconds(time[1])\r\n  }, [timer])\r\n\r\n\r\n  function toggleCountDown() {\r\n    if (hasStarted) {\r\n      // started mode\r\n      if (timerIntervalId) {\r\n        clearInterval(timerIntervalId)\r\n      }\r\n      setTimerIntervalId(null)\r\n    } else {\r\n      // stopped mode\r\n      // create accurate date timer with date\r\n      const newIntervalId = setInterval(() => {\r\n        setTimer(prevTime => {\r\n          let newTime = prevTime - 1\r\n          let time = secondsToTime(newTime)\r\n          setTimerMinutes(time[0])\r\n          setTimerSeconds(time[1])\r\n          return newTime\r\n        })\r\n      }, 1000)\r\n      setTimerIntervalId(newIntervalId)\r\n    }\r\n  }\r\n\r\n  // return minutes and seconds of seconds\r\n  function secondsToTime(seconds) {\r\n    return [Math.floor(seconds / 60), seconds % 60]\r\n  }\r\n\r\n\r\n  // zero paddings if < 10\r\n  function formatDisplayTime(time) {\r\n    if (time < 10) {\r\n      return `0${time}`\r\n    } else {\r\n      return time\r\n    }\r\n  }\r\n\r\n  function handleBreakLengthChange(e) {\r\n    if (hasStarted) return; // guard against change when running\r\n\r\n    if (e.target.id === 'break-decrement' && breakLength > 60) {\r\n      setBreakLength((prevVal) => prevVal - 60)\r\n    } else if (e.target.id === 'break-increment' && breakLength < 3600) {\r\n      setBreakLength(prevVal => prevVal + 60)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  function handleSessionLengthChange(e) {\r\n    if (hasStarted) return; // guard against change when running\r\n\r\n    if (e.target.id === 'session-decrement' && sessionLength > 60) {\r\n      setSessionLength((prevVal) => prevVal - 60)\r\n    } else if (e.target.id === 'session-increment' && sessionLength < 3600) {\r\n      setSessionLength(prevVal => prevVal + 60)\r\n    }\r\n  }\r\n\r\n  function handleResetTimer() {\r\n    audioRef?.current?.load()\r\n    if (timerIntervalId) {\r\n      clearInterval(timerIntervalId)\r\n    }\r\n    setTimerIntervalId(null)\r\n    setSessionLength(1500)\r\n    setBreakLength(300)\r\n    setSessionType('Session')\r\n    setTimer(1500)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className = 'App' >\r\n\r\n      <div className=\"clock-container\" >\r\n\r\n\r\n\r\n      <div className=\"clock\">\r\n          <h1>Pomodoro Timer</h1>\r\n          {/* Controls */}\r\n          <div className=\"length-controls\">\r\n            {/* Control 1 */}\r\n            <div className=\"length-control\">\r\n              <p id=\"break-label\">Break Length</p>\r\n              <div className=\"length-control-btns\">\r\n                <button\r\n                  id=\"break-decrement\"\r\n                  onClick={(e) => handleBreakLengthChange(e)}\r\n                >&lt;\r\n                </button>\r\n                <div id=\"break-length\">{Math.floor(breakLength / 60)}</div>\r\n                <button\r\n                  id=\"break-increment\"\r\n                  onClick={(e) => handleBreakLengthChange(e)}\r\n                >&gt;\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Control 2 */}\r\n            <div className=\"length-control\">\r\n              <p id=\"session-label\">Session Length</p>\r\n              <div className=\"length-control-btns\">\r\n                <button\r\n                  id=\"session-decrement\"\r\n                  onClick={(e) => handleSessionLengthChange(e)}\r\n                >&lt;\r\n                </button>\r\n                <div id=\"session-length\">{sessionLength / 60}</div>\r\n                <button\r\n                  id=\"session-increment\"\r\n                  onClick={(e) => handleSessionLengthChange(e)}\r\n                >&gt;\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Timer */}\r\n          <div className=\"timer\">\r\n            <p id=\"timer-label\">{sessionType}</p>\r\n            <div id=\"time-left\">{formatDisplayTime(timerMinutes)}:{formatDisplayTime(timerSeconds)}</div>\r\n          </div>\r\n\r\n          <div className=\"timer-control\">\r\n            <button\r\n              id=\"start_stop\"\r\n              onClick={(e) => toggleCountDown()}\r\n            >{hasStarted ? 'Stop' : 'Start'}</button>\r\n            <button\r\n              id=\"reset\"\r\n              onClick={handleResetTimer}\r\n            >Reset</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <audio\r\n        id=\"beep\"\r\n        preload=\"auto\"\r\n        ref={audioRef}\r\n        src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountDown;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}