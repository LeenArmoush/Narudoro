{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\leena\\\\Downloads\\\\Narudoro.1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\leena\\\\Downloads\\\\Narudoro.1\\\\src\\\\components\\\\Timer\\\\CountDown.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { directive } from 'vue/types/umd';\n\nfunction CountDown() {\n  // const [timerState, setTimerState] = useState({\n  //   // minute times 60 seconds\n  //   sessionLength: 25 * 60,\n  //   breakLength: 5 * 60,\n  //   isRunning: false,\n  //   seconds: 0,\n  //   isSession: true,\n  //   // can include number of sessions/breaks taken as well if you would like\n  // });\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      seconds = _useState2[0],\n      setSeconds = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isRunning = _useState4[0],\n      setIsRunning = _useState4[1];\n\n  useEffect(function () {\n    if (isRunning) {\n      window.setInterval(function () {\n        setSeconds(function (seconds) {\n          return seconds + 1;\n        });\n      }, 1000);\n    }\n  }, [isRunning]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setSeconds(seconds + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, \"inc seconds\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setCount(count + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, \"inc count\"));\n} // const CountDown = () => {\n//    return (\n//           <h1>COUNTDOWN</h1>\n//    );\n// };\n\n\nexport default CountDown;","map":{"version":3,"names":["React","useState","useEffect","directive","CountDown","seconds","setSeconds","isRunning","setIsRunning","window","setInterval","setCount","count"],"sources":["C:/Users/leena/Downloads/Narudoro.1/src/components/Timer/CountDown.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { directive } from 'vue/types/umd';\r\n\r\n\r\nfunction CountDown() {\r\n  // const [timerState, setTimerState] = useState({\r\n  //   // minute times 60 seconds\r\n  //   sessionLength: 25 * 60,\r\n  //   breakLength: 5 * 60,\r\n  //   isRunning: false,\r\n  //   seconds: 0,\r\n  //   isSession: true,\r\n  //   // can include number of sessions/breaks taken as well if you would like\r\n  // });\r\n  const [seconds, setSeconds]= useState(0);\r\n  const [isRunning, setIsRunning]= useState(false);\r\n  useEffect(() => {\r\n    if (isRunning) {\r\n      window.setInterval(() => {\r\n        setSeconds(seconds => seconds + 1);\r\n      }, 1000);\r\n    }\r\n  }, [isRunning]);\r\n\r\n  return (\r\n    <div>\r\n    <button onClick={() => setSeconds(seconds +1)}>inc seconds</button>\r\n    <button onClick={() => setCount(count +1)}>inc count</button>\r\n    </div>\r\n  )\r\n}\r\n \r\n// const CountDown = () => {\r\n//    return (\r\n//           <h1>COUNTDOWN</h1>\r\n\r\n//    );\r\n// };\r\n\r\n\r\n \r\nexport default CountDown;"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,eAA1B;;AAGA,SAASC,SAAT,GAAqB;EACnB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,gBAA6BH,QAAQ,CAAC,CAAD,CAArC;EAAA;EAAA,IAAOI,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAAiCL,QAAQ,CAAC,KAAD,CAAzC;EAAA;EAAA,IAAOM,SAAP;EAAA,IAAkBC,YAAlB;;EACAN,SAAS,CAAC,YAAM;IACd,IAAIK,SAAJ,EAAe;MACbE,MAAM,CAACC,WAAP,CAAmB,YAAM;QACvBJ,UAAU,CAAC,UAAAD,OAAO;UAAA,OAAIA,OAAO,GAAG,CAAd;QAAA,CAAR,CAAV;MACD,CAFD,EAEG,IAFH;IAGD;EACF,CANQ,EAMN,CAACE,SAAD,CANM,CAAT;EAQA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA;IAAQ,OAAO,EAAE;MAAA,OAAMD,UAAU,CAACD,OAAO,GAAE,CAAV,CAAhB;IAAA,CAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBADA,eAEA;IAAQ,OAAO,EAAE;MAAA,OAAMM,QAAQ,CAACC,KAAK,GAAE,CAAR,CAAd;IAAA,CAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eAFA,CADF;AAMD,C,CAED;AACA;AACA;AAEA;AACA;;;AAIA,eAAeR,SAAf"},"metadata":{},"sourceType":"module"}