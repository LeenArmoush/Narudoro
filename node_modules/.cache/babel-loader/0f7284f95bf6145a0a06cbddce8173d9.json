{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leena\\\\OneDrive\\\\Desktop\\\\Narudoro.1\\\\src\\\\components\\\\Timer\\\\Count.js\",\n    _s = $RefreshSig$();\n\nimport './Count.css';\nimport Timer from \"./Timer\";\nimport Settings from \"./Settings\";\nimport React, { useState } from \"react\";\nimport SettingsContext from \"./SettingsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Count() {\n  _s();\n\n  const [showSettings, setShowSettings] = useState(false);\n  const [workMinutes, setWorkMinutes] = useState(25);\n  const [breakMinutes, setBreakMinutes] = useState(5);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(SettingsContext.Provider, {\n      value: {\n        showSettings,\n        setShowSettings,\n        workMinutes,\n        breakMinutes,\n        setWorkMinutes,\n        setBreakMinutes\n      },\n      children: showSettings ? /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Count, \"0yNn1M+oFeGusJdZsv8paSSH8DE=\");\n\n_c = Count;\nexport default Count;\n\nvar _c;\n\n$RefreshReg$(_c, \"Count\");","map":{"version":3,"sources":["C:/Users/leena/OneDrive/Desktop/Narudoro.1/src/components/Timer/Count.js"],"names":["Timer","Settings","React","useState","SettingsContext","Count","showSettings","setShowSettings","workMinutes","setWorkMinutes","breakMinutes","setBreakMinutes"],"mappings":";;;AAAA,OAAO,aAAP;AACA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAEf,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,CAAD,CAAhD;AAEA,sBACE;AAAA,2BACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,MAAA,KAAK,EAAE;AAC/BG,QAAAA,YAD+B;AAE/BC,QAAAA,eAF+B;AAG/BC,QAAAA,WAH+B;AAI/BE,QAAAA,YAJ+B;AAK/BD,QAAAA,cAL+B;AAM/BE,QAAAA;AAN+B,OAAjC;AAAA,gBAQGL,YAAY,gBAAG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAkB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AARjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GApBQD,K;;KAAAA,K;AAsBT,eAAeA,KAAf","sourcesContent":["import './Count.css';\r\nimport Timer from \"./Timer\";\r\nimport Settings from \"./Settings\";\r\nimport React, {useState} from \"react\";\r\nimport SettingsContext from \"./SettingsContext\";\r\n\r\nfunction Count() {\r\n\r\n  const [showSettings, setShowSettings] = useState(false);\r\n  const [workMinutes, setWorkMinutes] = useState(25);\r\n  const [breakMinutes, setBreakMinutes] = useState(5);\r\n\r\n  return (\r\n    <main>\r\n      <SettingsContext.Provider value={{\r\n        showSettings,\r\n        setShowSettings,\r\n        workMinutes,\r\n        breakMinutes,\r\n        setWorkMinutes,\r\n        setBreakMinutes,\r\n      }}>\r\n        {showSettings ? <Settings /> : <Timer />}\r\n      </SettingsContext.Provider>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Count;\r\n"]},"metadata":{},"sourceType":"module"}