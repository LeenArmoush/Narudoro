{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\leena\\\\OneDrive\\\\Desktop\\\\Narudoro.1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\leena\\\\OneDrive\\\\Desktop\\\\Narudoro.1\\\\src\\\\components\\\\Timer\\\\Count.js\";\nimport './Count.css';\nimport Timer from \"./Timer\";\nimport Settings from \"./Settings\";\nimport { useState } from \"react\";\nimport SettingsContext from \"./SettingsContext\";\n\nfunction Count() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showSettings = _useState2[0],\n      setShowSettings = _useState2[1];\n\n  var _useState3 = useState(45),\n      _useState4 = _slicedToArray(_useState3, 2),\n      workMinutes = _useState4[0],\n      setWorkMinutes = _useState4[1];\n\n  var _useState5 = useState(15),\n      _useState6 = _slicedToArray(_useState5, 2),\n      breakMinutes = _useState6[0],\n      setBreakMinutes = _useState6[1];\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SettingsContext.Provider, {\n    value: {\n      showSettings: showSettings,\n      setShowSettings: setShowSettings,\n      workMinutes: workMinutes,\n      breakMinutes: breakMinutes,\n      setWorkMinutes: setWorkMinutes,\n      setBreakMinutes: setBreakMinutes\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, showSettings ? /*#__PURE__*/React.createElement(Settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(Timer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 40\n    }\n  })));\n}\n\nexport default Count;","map":{"version":3,"names":["Timer","Settings","useState","SettingsContext","Count","showSettings","setShowSettings","workMinutes","setWorkMinutes","breakMinutes","setBreakMinutes"],"sources":["C:/Users/leena/OneDrive/Desktop/Narudoro.1/src/components/Timer/Count.js"],"sourcesContent":["import './Count.css';\r\nimport Timer from \"./Timer\";\r\nimport Settings from \"./Settings\";\r\nimport {useState} from \"react\";\r\nimport SettingsContext from \"./SettingsContext\";\r\n\r\nfunction Count() {\r\n\r\n  const [showSettings, setShowSettings] = useState(false);\r\n  const [workMinutes, setWorkMinutes] = useState(45);\r\n  const [breakMinutes, setBreakMinutes] = useState(15);\r\n\r\n  return (\r\n    <main>\r\n      <SettingsContext.Provider value={{\r\n        showSettings,\r\n        setShowSettings,\r\n        workMinutes,\r\n        breakMinutes,\r\n        setWorkMinutes,\r\n        setBreakMinutes,\r\n      }}>\r\n        {showSettings ? <Settings /> : <Timer />}\r\n      </SettingsContext.Provider>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Count;\r\n"],"mappings":";;AAAA,OAAO,aAAP;AACA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,SAASC,KAAT,GAAiB;EAEf,gBAAwCF,QAAQ,CAAC,KAAD,CAAhD;EAAA;EAAA,IAAOG,YAAP;EAAA,IAAqBC,eAArB;;EACA,iBAAsCJ,QAAQ,CAAC,EAAD,CAA9C;EAAA;EAAA,IAAOK,WAAP;EAAA,IAAoBC,cAApB;;EACA,iBAAwCN,QAAQ,CAAC,EAAD,CAAhD;EAAA;EAAA,IAAOO,YAAP;EAAA,IAAqBC,eAArB;;EAEA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,eAAD,CAAiB,QAAjB;IAA0B,KAAK,EAAE;MAC/BL,YAAY,EAAZA,YAD+B;MAE/BC,eAAe,EAAfA,eAF+B;MAG/BC,WAAW,EAAXA,WAH+B;MAI/BE,YAAY,EAAZA,YAJ+B;MAK/BD,cAAc,EAAdA,cAL+B;MAM/BE,eAAe,EAAfA;IAN+B,CAAjC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAQGL,YAAY,gBAAG,oBAAC,QAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAH,gBAAkB,oBAAC,KAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EARjC,CADF,CADF;AAcD;;AAED,eAAeD,KAAf"},"metadata":{},"sourceType":"module"}