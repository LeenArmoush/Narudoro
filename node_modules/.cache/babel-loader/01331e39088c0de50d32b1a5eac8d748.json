{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\leena\\\\Downloads\\\\Narudoro.1\\\\src\\\\components\\\\Timer\\\\CountDown.jsx\";\n\n// import React, { useState, useEffect } from 'react';\n// import { directive } from 'vue/types/umd';\n// function CountDown() {\n//   // const [timerState, setTimerState] = useState({\n//   //   // minute times 60 seconds\n//   //   sessionLength: 25 * 60,\n//   //   breakLength: 5 * 60,\n//   //   isRunning: false,\n//   //   seconds: 0,\n//   //   isSession: true,\n//   //   // can include number of sessions/breaks taken as well if you would like\n//   // });\n//   const [seconds, setSeconds]= useState(0);\n//   const [isRunning, setIsRunning]= useState(false);\n//   useEffect(() => {\n//     if (isRunning) {\n//       window.setInterval(() => {\n//         setSeconds(seconds => seconds + 1);\n//       }, 1000);\n//     }\n//   }, [isRunning]);\n//   return (\n//     <div>\n//     <button onClick={() => setSeconds(seconds +1)}>inc seconds</button>\n//     <button onClick={() => setCount(count +1)}>inc count</button>\n//     </div>\n//   )\n// }\n// // const CountDown = () => {\n// //    return (\n// //           <h1>COUNTDOWN</h1>\n// //    );\n// // };\n// export default CountDown;\nimport React from 'react';\n\nvar CountDown = function CountDown() {\n  return /*#__PURE__*/React.createElement(\"header\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }\n  }, \"Yessir\"));\n};\n\nexport default CountDown;","map":{"version":3,"names":["React","CountDown"],"sources":["C:/Users/leena/Downloads/Narudoro.1/src/components/Timer/CountDown.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { directive } from 'vue/types/umd';\r\n\r\n\r\n// function CountDown() {\r\n//   // const [timerState, setTimerState] = useState({\r\n//   //   // minute times 60 seconds\r\n//   //   sessionLength: 25 * 60,\r\n//   //   breakLength: 5 * 60,\r\n//   //   isRunning: false,\r\n//   //   seconds: 0,\r\n//   //   isSession: true,\r\n//   //   // can include number of sessions/breaks taken as well if you would like\r\n//   // });\r\n//   const [seconds, setSeconds]= useState(0);\r\n//   const [isRunning, setIsRunning]= useState(false);\r\n//   useEffect(() => {\r\n//     if (isRunning) {\r\n//       window.setInterval(() => {\r\n//         setSeconds(seconds => seconds + 1);\r\n//       }, 1000);\r\n//     }\r\n//   }, [isRunning]);\r\n\r\n//   return (\r\n//     <div>\r\n//     <button onClick={() => setSeconds(seconds +1)}>inc seconds</button>\r\n//     <button onClick={() => setCount(count +1)}>inc count</button>\r\n//     </div>\r\n//   )\r\n// }\r\n \r\n// // const CountDown = () => {\r\n// //    return (\r\n// //           <h1>COUNTDOWN</h1>\r\n\r\n// //    );\r\n// // };\r\n\r\n\r\n \r\n// export default CountDown;\r\n\r\nimport React from 'react';\r\n \r\nconst CountDown = () => {\r\n   return (\r\n       <header>\r\n           <h1>Yessir</h1>\r\n       </header>\r\n   );\r\n};\r\n \r\nexport default CountDown;"],"mappings":";;;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;EACrB,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YADJ,CADJ;AAKF,CAND;;AAQA,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}