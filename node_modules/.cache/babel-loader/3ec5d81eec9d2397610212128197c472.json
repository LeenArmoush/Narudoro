{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { directive } from 'vue/types/umd';\n// function CountDown() {\n//   // const [timerState, setTimerState] = useState({\n//   //   // minute times 60 seconds\n//   //   sessionLength: 25 * 60,\n//   //   breakLength: 5 * 60,\n//   //   isRunning: false,\n//   //   seconds: 0,\n//   //   isSession: true,\n//   //   // can include number of sessions/breaks taken as well if you would like\n//   // });\n//   const [seconds, setSeconds]= useState(0);\n//   const [isRunning, setIsRunning]= useState(false);\n//   useEffect(() => {\n//     if (isRunning) {\n//       window.setInterval(() => {\n//         setSeconds(seconds => seconds + 1);\n//       }, 1000);\n//     }\n//   }, [isRunning]);\n//   return (\n//     <div>\n//     <button onClick={() => setSeconds(seconds +1)}>inc seconds</button>\n//     <button onClick={() => setCount(count +1)}>inc count</button>\n//     </div>\n//   )\n// }\n// // const CountDown = () => {\n// //    return (\n// //           <h1>COUNTDOWN</h1>\n// //    );\n// // };\n// export default CountDown;\n\"use-strict\"; // html elements\n\nvar mainPage = document.getElementById(\"main\");\nvar timeSection = document.getElementById(\"time-section\");\nvar pomodoro = document.getElementById(\"pomodoro\");\nvar shortBreak = document.getElementById(\"short-break\");\nvar longBreak = document.getElementById(\"long-break\");\nvar clockEl = document.getElementById(\"clock\");\nvar startBtn = document.getElementById(\"start\");\nvar addTaskBtn = document.getElementById(\"add-task-btn\");\nvar pageTitle = document.getElementById(\"title\");\nvar progressBar = document.getElementById(\"progress-bar\");\nvar Breakminute, time, strt, updateTitle, moveNext, wit;\nwit = 0; // runs when refresh the page\n\nBreakminute = 25;\ntime = Breakminute * 60;\nmoveNext = 100 / time; // style for study time, short break time and long break time\n\nvar setStyle = {\n  pomofocus: function pomofocus() {\n    startBtn.textContent = \"START\";\n    mainPage.style.background = \"rgb(240, 91, 86)\";\n    timeSection.style.background = \"rgba(255, 255, 255, 0.1)\";\n    startBtn.style.color = \"rgb(240, 91, 86)\";\n    addTaskBtn.style.background = \"rgb(177, 59, 56)\";\n    Breakminute = 25;\n    time = Breakminute * 60;\n    clockEl.textContent = \"25:00\";\n    moveNext = 100 / time;\n    wit = 0;\n    updateTitle = \"Time To Work\";\n    pageTitle.textContent = \"25:00 | \".concat(updateTitle);\n  },\n  shrtBrk: function shrtBrk() {\n    startBtn.textContent = \"START\";\n    mainPage.style.background = \"rgb(76, 166, 169)\";\n    startBtn.style.color = \"rgb(76, 166, 169)\";\n    timeSection.style.background = \"rgba(255, 255, 255, 0.1)\";\n    addTaskBtn.style.background = \"rgb(75, 140, 146)\";\n    Breakminute = 5;\n    time = Breakminute * 60;\n    clockEl.textContent = \"05:00\";\n    moveNext = 100 / time;\n    wit = 0;\n    updateTitle = \"Short Break\";\n    pageTitle.textContent = \"05:00 | \".concat(updateTitle);\n  },\n  lngBrk: function lngBrk() {\n    debugger;\n    startBtn.textContent = \"START\";\n    mainPage.style.background = \"rgb(73, 143, 193)\";\n    startBtn.style.color = \"rgb(73, 143, 193)\";\n    timeSection.style.background = \"rgba(255, 255, 255, 0.1)\";\n    addTaskBtn.style.background = \"rgb(60, 120, 166)\";\n    Breakminute = 15;\n    time = Breakminute * 60;\n    clockEl.textContent = \"15:00\";\n    moveNext = 100 / time;\n    wit = 0;\n    updateTitle = \"Long Break\";\n    pageTitle.textContent = \"15:00 | \".concat(updateTitle);\n  }\n}; // for future ;-)\n\nvar clickHandlers = {\n  start: function start() {},\n  stop: function stop() {}\n};\nvar startStop = false;\nvar clearInt; // run the function on click but it runs automatically\n\nvar runFunc = function runFunc() {\n  startStop = !startStop;\n\n  if (startStop) {\n    clearInt = setInterval(countDown, 1000);\n  } else {\n    startBtn.textContent = \"START\";\n    clearInterval(clearInt);\n  }\n}; // countdown function for the timer\n\n\nfunction CountDown() {\n  debugger;\n  startBtn.textContent = \"STOP\";\n  minute = Math.floor(time / 60);\n  var second = time % 60;\n\n  if (minute < 1) {\n    clearInterval(minute = 0);\n  }\n\n  var formatNum = (\"0\" + second).slice(-2);\n  var formatNum1 = (\"0\" + minute).slice(-2);\n  clockEl.innerHTML = \"\".concat(formatNum1, \":\").concat(formatNum); //moveNext++;\n\n  wit = wit + moveNext;\n  progressBar.style.width = \"\".concat(wit, \"%\");\n  pageTitle.innerHTML = \"\".concat(formatNum1, \":\").concat(formatNum, \" | \").concat(updateTitle);\n  time--;\n} // calls functions on click\n\n\npomodoro.onclick = setStyle.pomofocus;\nshortBreak.onclick = setStyle.shrtBrk;\nlongBreak.onclick = setStyle.lngBrk;\nstartBtn.onclick = runFunc;","map":{"version":3,"names":["mainPage","document","getElementById","timeSection","pomodoro","shortBreak","longBreak","clockEl","startBtn","addTaskBtn","pageTitle","progressBar","Breakminute","time","strt","updateTitle","moveNext","wit","setStyle","pomofocus","textContent","style","background","color","shrtBrk","lngBrk","clickHandlers","start","stop","startStop","clearInt","runFunc","setInterval","countDown","clearInterval","CountDown","minute","Math","floor","second","formatNum","slice","formatNum1","innerHTML","width","onclick"],"sources":["C:/Users/leena/Downloads/Narudoro.1/src/components/Timer/CountDown.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { directive } from 'vue/types/umd';\r\n\r\n\r\n// function CountDown() {\r\n//   // const [timerState, setTimerState] = useState({\r\n//   //   // minute times 60 seconds\r\n//   //   sessionLength: 25 * 60,\r\n//   //   breakLength: 5 * 60,\r\n//   //   isRunning: false,\r\n//   //   seconds: 0,\r\n//   //   isSession: true,\r\n//   //   // can include number of sessions/breaks taken as well if you would like\r\n//   // });\r\n//   const [seconds, setSeconds]= useState(0);\r\n//   const [isRunning, setIsRunning]= useState(false);\r\n//   useEffect(() => {\r\n//     if (isRunning) {\r\n//       window.setInterval(() => {\r\n//         setSeconds(seconds => seconds + 1);\r\n//       }, 1000);\r\n//     }\r\n//   }, [isRunning]);\r\n\r\n//   return (\r\n//     <div>\r\n//     <button onClick={() => setSeconds(seconds +1)}>inc seconds</button>\r\n//     <button onClick={() => setCount(count +1)}>inc count</button>\r\n//     </div>\r\n//   )\r\n// }\r\n \r\n// // const CountDown = () => {\r\n// //    return (\r\n// //           <h1>COUNTDOWN</h1>\r\n\r\n// //    );\r\n// // };\r\n\r\n\r\n \r\n// export default CountDown;\r\n\r\n\"use-strict\";\r\n// html elements\r\nlet mainPage = document.getElementById(\"main\");\r\nlet timeSection = document.getElementById(\"time-section\");\r\nlet pomodoro = document.getElementById(\"pomodoro\");\r\nlet shortBreak = document.getElementById(\"short-break\");\r\nlet longBreak = document.getElementById(\"long-break\");\r\nlet clockEl = document.getElementById(\"clock\");\r\nlet startBtn = document.getElementById(\"start\");\r\nlet addTaskBtn = document.getElementById(\"add-task-btn\");\r\nlet pageTitle = document.getElementById(\"title\");\r\nlet progressBar = document.getElementById(\"progress-bar\");\r\n\r\nlet Breakminute, time, strt, updateTitle, moveNext, wit;\r\nwit = 0;\r\n// runs when refresh the page\r\nBreakminute = 25;\r\ntime = Breakminute * 60;\r\nmoveNext = 100 / time;\r\n// style for study time, short break time and long break time\r\nlet setStyle = {\r\n\tpomofocus: function () {\r\n\t\tstartBtn.textContent = \"START\";\r\n\t\tmainPage.style.background = \"rgb(240, 91, 86)\";\r\n\t\ttimeSection.style.background = \"rgba(255, 255, 255, 0.1)\";\r\n\t\tstartBtn.style.color = \"rgb(240, 91, 86)\";\r\n\t\taddTaskBtn.style.background = \"rgb(177, 59, 56)\";\r\n\t\tBreakminute = 25;\r\n\t\ttime = Breakminute * 60;\r\n\t\tclockEl.textContent = \"25:00\";\r\n\t\tmoveNext = 100 / time;\r\n\t\twit = 0;\r\n\t\tupdateTitle = \"Time To Work\";\r\n\t\tpageTitle.textContent = `25:00 | ${updateTitle}`;\r\n\t},\r\n\tshrtBrk: function () {\r\n\t\tstartBtn.textContent = \"START\";\r\n\t\tmainPage.style.background = \"rgb(76, 166, 169)\";\r\n\t\tstartBtn.style.color = \"rgb(76, 166, 169)\";\r\n\t\ttimeSection.style.background = \"rgba(255, 255, 255, 0.1)\";\r\n\t\taddTaskBtn.style.background = \"rgb(75, 140, 146)\";\r\n\t\tBreakminute = 5;\r\n\t\ttime = Breakminute * 60;\r\n\t\tclockEl.textContent = \"05:00\";\r\n\t\tmoveNext = 100 / time;\r\n\t\twit = 0;\r\n\t\tupdateTitle = \"Short Break\";\r\n\t\tpageTitle.textContent = `05:00 | ${updateTitle}`;\r\n\t},\r\n\tlngBrk: function () {\r\n\t\tdebugger;\r\n\t\tstartBtn.textContent = \"START\";\r\n\t\tmainPage.style.background = \"rgb(73, 143, 193)\";\r\n\t\tstartBtn.style.color = \"rgb(73, 143, 193)\";\r\n\t\ttimeSection.style.background = \"rgba(255, 255, 255, 0.1)\";\r\n\t\taddTaskBtn.style.background = \"rgb(60, 120, 166)\";\r\n\t\tBreakminute = 15;\r\n\t\ttime = Breakminute * 60;\r\n\t\tclockEl.textContent = \"15:00\";\r\n\t\tmoveNext = 100 / time;\r\n\t\twit = 0;\r\n\t\tupdateTitle = \"Long Break\";\r\n\t\tpageTitle.textContent = `15:00 | ${updateTitle}`;\r\n\t},\r\n};\r\n\r\n// for future ;-)\r\nlet clickHandlers = {\r\n\tstart: function () {},\r\n\tstop: function () {},\r\n};\r\nlet startStop = false;\r\nlet clearInt;\r\n// run the function on click but it runs automatically\r\nlet runFunc = function () {\r\n\tstartStop = !startStop;\r\n\tif (startStop) {\r\n\t\tclearInt = setInterval(countDown, 1000);\r\n\t} else {\r\n\t\tstartBtn.textContent = \"START\";\r\n\t\tclearInterval(clearInt);\r\n\t}\r\n};\r\n\r\n// countdown function for the timer\r\n\r\nfunction CountDown() {\r\n\tdebugger;\r\n\tstartBtn.textContent = \"STOP\";\r\n\r\n\tminute = Math.floor(time / 60);\r\n\tlet second = time % 60;\r\n\r\n\tif (minute < 1) {\r\n\t\tclearInterval((minute = 0));\r\n\t}\r\n\tvar formatNum = (\"0\" + second).slice(-2);\r\n\tvar formatNum1 = (\"0\" + minute).slice(-2);\r\n\tclockEl.innerHTML = `${formatNum1}:${formatNum}`;\r\n\t//moveNext++;\r\n\twit = wit + moveNext;\r\n\tprogressBar.style.width = `${wit}%`;\r\n\r\n\tpageTitle.innerHTML = `${formatNum1}:${formatNum} | ${updateTitle}`;\r\n\ttime--;\r\n}\r\n\r\n// calls functions on click\r\npomodoro.onclick = setStyle.pomofocus;\r\nshortBreak.onclick = setStyle.shrtBrk;\r\nlongBreak.onclick = setStyle.lngBrk;\r\nstartBtn.onclick = runFunc;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}