{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\leena\\\\OneDrive\\\\Desktop\\\\Narudoro.1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\leena\\\\OneDrive\\\\Desktop\\\\Narudoro.1\\\\src\\\\components\\\\Timer\\\\Timer.js\";\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport PlayButton from \"./PlayButton\";\nimport PauseButton from \"./PauseButton\";\nimport SettingsButton from \"./SettingsButton\";\nimport { useContext, useState, useEffect, useRef } from \"react\";\nimport SettingsContext from \"./SettingsContext\";\nvar red = '#f54e4e';\nvar green = '#4aec8c';\n\nfunction Timer() {\n  var settingsInfo = useContext(SettingsContext);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isPaused = _useState2[0],\n      setIsPaused = _useState2[1];\n\n  var _useState3 = useState('work'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mode = _useState4[0],\n      setMode = _useState4[1]; // work/break/null\n\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      secondsLeft = _useState6[0],\n      setSecondsLeft = _useState6[1];\n\n  var secondsLeftRef = useRef(secondsLeft);\n  var isPausedRef = useRef(isPaused);\n  var modeRef = useRef(mode);\n\n  function tick() {\n    secondsLeftRef.current--;\n    setSecondsLeft(secondsLeftRef.current);\n  }\n\n  useEffect(function () {\n    function switchMode() {\n      var nextMode = modeRef.current === 'work' ? 'break' : 'work';\n      var nextSeconds = (nextMode === 'work' ? settingsInfo.workMinutes : settingsInfo.breakMinutes) * 60;\n      setMode(nextMode);\n      modeRef.current = nextMode;\n      setSecondsLeft(nextSeconds);\n      secondsLeftRef.current = nextSeconds;\n    }\n\n    secondsLeftRef.current = settingsInfo.workMinutes * 60;\n    setSecondsLeft(secondsLeftRef.current);\n    var interval = setInterval(function () {\n      if (isPausedRef.current) {\n        return;\n      }\n\n      if (secondsLeftRef.current === 0) {\n        return switchMode();\n      }\n\n      tick();\n    }, 1000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [settingsInfo]);\n  var totalSeconds = mode === 'work' ? settingsInfo.workMinutes * 60 : settingsInfo.breakMinutes * 60;\n  var percentage = Math.round(secondsLeft / totalSeconds * 100);\n  var minutes = Math.floor(secondsLeft / 60);\n  var seconds = secondsLeft % 60;\n  if (seconds < 10) seconds = '0' + seconds;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgressbar, {\n    value: percentage,\n    text: minutes + ':' + seconds,\n    styles: buildStyles({\n      textColor: '#fff',\n      pathColor: mode === 'work' ? red : green,\n      tailColor: 'rgba(255,255,255,.2)'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, isPaused ? /*#__PURE__*/React.createElement(PlayButton, {\n    onClick: function onClick() {\n      setIsPaused(false);\n      isPausedRef.current = false;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(PauseButton, {\n    onClick: function onClick() {\n      setIsPaused(true);\n      isPausedRef.current = true;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SettingsButton, {\n    onClick: function onClick() {\n      return settingsInfo.setShowSettings(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Timer;","map":{"version":3,"names":["CircularProgressbar","buildStyles","PlayButton","PauseButton","SettingsButton","useContext","useState","useEffect","useRef","SettingsContext","red","green","Timer","settingsInfo","isPaused","setIsPaused","mode","setMode","secondsLeft","setSecondsLeft","secondsLeftRef","isPausedRef","modeRef","tick","current","switchMode","nextMode","nextSeconds","workMinutes","breakMinutes","interval","setInterval","clearInterval","totalSeconds","percentage","Math","round","minutes","floor","seconds","textColor","pathColor","tailColor","marginTop","setShowSettings"],"sources":["C:/Users/leena/OneDrive/Desktop/Narudoro.1/src/components/Timer/Timer.js"],"sourcesContent":["import { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport PlayButton from \"./PlayButton\";\r\nimport PauseButton from \"./PauseButton\";\r\nimport SettingsButton from \"./SettingsButton\";\r\nimport {useContext, useState, useEffect, useRef} from \"react\";\r\nimport SettingsContext from \"./SettingsContext\";\r\n\r\nconst red = '#f54e4e';\r\nconst green = '#4aec8c';\r\n\r\nfunction Timer() {\r\n  const settingsInfo = useContext(SettingsContext);\r\n\r\n  const [isPaused, setIsPaused] = useState(true);\r\n  const [mode, setMode] = useState('work'); // work/break/null\r\n  const [secondsLeft, setSecondsLeft] = useState(0);\r\n\r\n  const secondsLeftRef = useRef(secondsLeft);\r\n  const isPausedRef = useRef(isPaused);\r\n  const modeRef = useRef(mode);\r\n\r\n  function tick() {\r\n    secondsLeftRef.current--;\r\n    setSecondsLeft(secondsLeftRef.current);\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    function switchMode() {\r\n      const nextMode = modeRef.current === 'work' ? 'break' : 'work';\r\n      const nextSeconds = (nextMode === 'work' ? settingsInfo.workMinutes : settingsInfo.breakMinutes) * 60;\r\n\r\n      setMode(nextMode);\r\n      modeRef.current = nextMode;\r\n\r\n      setSecondsLeft(nextSeconds);\r\n      secondsLeftRef.current = nextSeconds;\r\n    }\r\n\r\n    secondsLeftRef.current = settingsInfo.workMinutes * 60;\r\n    setSecondsLeft(secondsLeftRef.current);\r\n\r\n    const interval = setInterval(() => {\r\n      if (isPausedRef.current) {\r\n        return;\r\n      }\r\n      if (secondsLeftRef.current === 0) {\r\n        return switchMode();\r\n      }\r\n\r\n      tick();\r\n    },1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [settingsInfo]);\r\n\r\n  const totalSeconds = mode === 'work'\r\n    ? settingsInfo.workMinutes * 60\r\n    : settingsInfo.breakMinutes * 60;\r\n  const percentage = Math.round(secondsLeft / totalSeconds * 100);\r\n\r\n  const minutes = Math.floor(secondsLeft / 60);\r\n  let seconds = secondsLeft % 60;\r\n  if(seconds < 10) seconds = '0'+seconds;\r\n\r\n  return (\r\n    <div>\r\n      <CircularProgressbar\r\n        value={percentage}\r\n        text={minutes + ':' + seconds}\r\n        styles={buildStyles({\r\n        textColor:'#fff',\r\n        pathColor:mode === 'work' ? red : green,\r\n        tailColor:'rgba(255,255,255,.2)',\r\n      })} />\r\n      <div style={{marginTop:'20px'}}>\r\n        {isPaused\r\n          ? <PlayButton onClick={() => { setIsPaused(false); isPausedRef.current = false; }} />\r\n          : <PauseButton onClick={() => { setIsPaused(true); isPausedRef.current = true; }} />}\r\n      </div>\r\n      <div style={{marginTop:'20px'}}>\r\n        <SettingsButton onClick={() => settingsInfo.setShowSettings(true)} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}