{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\leena\\\\Downloads\\\\Narudoro.1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\n\nfunction CountDown() {\n  var _useState = useState({\n    // minute times 60 seconds\n    sessionLength: 25 * 60,\n    breakLength: 5 * 60,\n    isRunning: false,\n    seconds: 0,\n    isSession: true // can include number of sessions/breaks taken as well if you would like\n\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      timerState = _useState2[0],\n      setTimerState = _useState2[1];\n} // const CountDown = () => {\n//    return (\n//           <h1>COUNTDOWN</h1>\n//    );\n// };\n\n\nexport default CountDown;","map":{"version":3,"names":["React","useState","useEffect","CountDown","sessionLength","breakLength","isRunning","seconds","isSession","timerState","setTimerState"],"sources":["C:/Users/leena/Downloads/Narudoro.1/src/components/Timer/CountDown.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n\r\nfunction CountDown() {\r\n  const [timerState, setTimerState] = useState({\r\n    // minute times 60 seconds\r\n    sessionLength: 25 * 60,\r\n    breakLength: 5 * 60,\r\n    isRunning: false,\r\n    seconds: 0,\r\n    isSession: true,\r\n    // can include number of sessions/breaks taken as well if you would like\r\n  });\r\n}\r\n \r\n// const CountDown = () => {\r\n//    return (\r\n//           <h1>COUNTDOWN</h1>\r\n\r\n//    );\r\n// };\r\n\r\n\r\n \r\nexport default CountDown;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAGA,SAASC,SAAT,GAAqB;EACnB,gBAAoCF,QAAQ,CAAC;IAC3C;IACAG,aAAa,EAAE,KAAK,EAFuB;IAG3CC,WAAW,EAAE,IAAI,EAH0B;IAI3CC,SAAS,EAAE,KAJgC;IAK3CC,OAAO,EAAE,CALkC;IAM3CC,SAAS,EAAE,IANgC,CAO3C;;EAP2C,CAAD,CAA5C;EAAA;EAAA,IAAOC,UAAP;EAAA,IAAmBC,aAAnB;AASD,C,CAED;AACA;AACA;AAEA;AACA;;;AAIA,eAAeP,SAAf"},"metadata":{},"sourceType":"module"}